{"version":3,"sources":["icons/chevron-up-solid.svg","icons/chevron-down-solid.svg","pages/components/CardJustification.tsx","pages/components/CardPoints.tsx","actions/decklistActions.tsx","pages/components/DeckEvaluator.tsx","pages/PointsList.tsx","App.tsx","serviceWorker.ts","reducers/decklistReducer.tsx","reducers/rootReducer.tsx","index.tsx","store.tsx"],"names":["module","exports","CardJustification","className","alt","this","props","name","src","image_url","explanation","moment","last_updated","fromNow","href","scryfall_uri","target","rel","React","Component","CardPoints","state","hasExpanded","toggleExpanded","bind","renderArrow","renderContent","setState","UpArrow","DownArrow","styleColour","style","borderColor","decklist","find","card","backgroundColor","points","onClick","connect","deck","DecklistCards","a","element","document","getElementsByClassName","length","scrollIntoView","behavior","DeckEvaluator","cards","map","onSubmit","updateDecklist","e","value","preventDefault","trim","setDecklistPoints","scrollTo","regex","entries","split","forEach","entry","result","match","groups","indexOf","push","results","filter","onChange","placeholder","dispatch","type","payload","PointsListPage","renderTotalPoints","totalPoints","reduce","sum","PointList","key","id","App","path","component","exact","Boolean","window","location","hostname","defaultState","combineReducers","action","ReactDOM","render","store","createStore","rootReducer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f307ef7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chevron-up-solid.3b30c822.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-down-solid.2c0862a6.svg\";","import React from 'react';\r\n\r\nimport './CardJustification.css';\r\nimport moment from 'moment';\r\n\r\ntype CardPointsProps =\r\n\t{\r\n\t\tname: string,\r\n\t\tpoints: number,\r\n\t\texplanation: string,\r\n\t\timage_url: string,\r\n\t\tscryfall_uri: string\r\n\t\tdate_created: number,\r\n\t\tlast_updated: number\r\n\t}\r\n\r\n\r\nclass CardJustification extends React.Component<CardPointsProps> {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"CardJustification\">\r\n\t\t\t\t<div className=\"CardJustification-card-container\">\r\n\t\t\t\t\t<img className=\"CardJustification-card-image\" alt={this.props.name} src={this.props.image_url}></img>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"CardJustification-content\">\r\n\t\t\t\t\t{/* <h2>\r\n\t\t\t\t\t\t{this.props.name}\r\n\t\t\t\t\t</h2> */}\r\n\t\t\t\t\t<div className=\"CardJustification-exaplanation\">\r\n\t\t\t\t\t\t{this.props.explanation}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"CardJustification-footer\">\r\n\t\t\t\t\t\t<div className=\"CardJustification-footer-update\">\r\n\t\t\t\t\t\t\tLast updated: {moment(this.props.last_updated).fromNow()}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div >\r\n\t\t\t\t\t\t\t<a className=\"CardJustification-footer-button\" href={this.props.scryfall_uri} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t\t\tView Card\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CardJustification;","import React from 'react';\r\n\r\nimport './CardPoints.css'\r\n\r\nimport UpArrow from '../../icons/chevron-up-solid.svg';\r\nimport DownArrow from '../../icons/chevron-down-solid.svg';\r\n\r\nimport CardJustification from './CardJustification';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\ntype CardPointsProps =\r\n{\r\n\tname: string,\r\n\tpoints: number,\r\n\texplanation: string,\r\n\timage_url: string,\r\n\tscryfall_uri: string\r\n\tdate_created: number,\r\n\tlast_updated: number,\r\n\r\n\tdecklist: Array<any>\r\n}\r\n\r\ntype CardPointsState = {\r\n\thasExpanded: boolean\r\n}\r\n\r\nclass CardPoints extends React.Component<CardPointsProps, CardPointsState> {\r\n\r\n\tconstructor(props: CardPointsProps){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\thasExpanded: false\r\n\t\t}\r\n\r\n\t\tthis.toggleExpanded = this.toggleExpanded.bind(this);\r\n\r\n\t\tthis.renderArrow = this.renderArrow.bind(this);\r\n\t\tthis.renderContent = this.renderContent.bind(this);\r\n\t}\r\n\r\n\ttoggleExpanded(){\r\n\t\tthis.setState({\r\n\t\t\thasExpanded: !this.state.hasExpanded\r\n\t\t})\r\n\t}\r\n\r\n\trenderArrow(){\r\n\t\tif(this.state.hasExpanded){\r\n\t\t\treturn UpArrow\r\n\t\t} else {\r\n\t\t\treturn DownArrow\r\n\t\t}\r\n\t}\r\n\r\n\trenderContent(styleColour: string){\r\n\t\tif(!this.state.hasExpanded){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"CardPoints-expanded\" style={{\r\n\t\t\t\tborderColor: styleColour\r\n\t\t\t}}>\r\n\t\t\t\t<CardJustification {...this.props}/>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst isInDecklist = this.props.decklist.find(card => {\r\n\t\t\treturn card.name === this.props.name\r\n\t\t});\r\n\r\n\t\tconst styleColour = isInDecklist ? \"#C5D86D\" : \"#FAA613\";\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"CardPoints\">\r\n\t\t\t\t<div className=\"CardPoints-title\" style={{\r\n\t\t\t\t\tbackgroundColor: styleColour\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<div className=\"CardPoints-name\">\r\n\t\t\t\t\t\t<strong>{this.props.name}</strong>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"CardPoints-points\">\r\n\t\t\t\t\t\t<strong>{this.props.points}</strong>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"CardPoints-expand\">\r\n\t\t\t\t\t\t<img alt=\"expand\" src={this.renderArrow()} onClick={this.toggleExpanded}></img>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.renderContent(styleColour)}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\r\n\treturn {\r\n\t\tdecklist: state.deck.decklist\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardPoints);","export const DecklistCards = 'DECKLIST_CARDS';\r\n\r\nexport function setDecklistPoints(payload: Array<any>) {\r\n\treturn {\r\n\t\ttype: DecklistCards,\r\n\t\tpayload\r\n\t}\r\n}","import React from 'react';\r\nimport './DeckEvaluator.css'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setDecklistPoints } from '../../actions/decklistActions'\r\n\r\ntype Props = {\r\n\tcards: Array<Card>,\r\n\tsetDecklistPoints: any\r\n};\r\n\r\ntype State = {\r\n\tdecklist: string,\r\n\tcards: Array<string>,\r\n\tresults?: Array<Card>\r\n};\r\n\r\ntype Card = {\r\n\tname: string,\r\n\tpoints: number,\r\n\timage_url: string,\r\n\tscryfall_uri: string,\r\n\texplanation: string,\r\n\tdate_created: number,\r\n\tlast_updated: number\r\n};\r\n\r\nasync function scrollTo(className: string){\r\n\tconst element = document.getElementsByClassName(className);\r\n\r\n\tif(element && element.length > 0){\r\n\t\telement[0].scrollIntoView({\r\n\t\t\tbehavior: \"smooth\"\r\n\t\t});\r\n\t};\r\n}\r\n\r\nclass DeckEvaluator extends React.Component<Props, State> {\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdecklist: \"\",\r\n\t\t\tcards: props.cards.map((card: Card) => {\r\n\t\t\t\treturn card.name;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\t\tthis.updateDecklist = this.updateDecklist.bind(this);\r\n\t}\r\n\r\n\tupdateDecklist(e: any){\r\n\t\tthis.setState({\r\n\t\t\tdecklist: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\t\r\n\r\n\tonSubmit(e: any) {\r\n\t\te.preventDefault();\r\n\r\n\t\tif(this.state.decklist.trim().length === 0){\r\n\t\t\tthis.props.setDecklistPoints([]);\r\n\t\t}\r\n\r\n\t\tscrollTo(\"PointsList-list\");\r\n\r\n\t\tconst regex = /^[0-9]+[xX]{0,1}\\s*(?<card>[a-zA-Z',/\\s]+[a-zA-Z])\\s*/i\r\n\r\n\t\tconst entries = this.state.decklist.split('\\n');\r\n\r\n\t\tlet cards: Array<string> = [];\r\n\r\n\t\tentries.forEach(entry => {\r\n\t\t\t\tconst result = entry.match(regex);\r\n\t\t\t\tif(result && result.groups && this.state.cards.indexOf(result.groups.card) >= 0){\r\n\t\t\t\t\tcards.push(result.groups.card);\r\n\t\t\t\t}\r\n\t\t})\r\n\t\tconst results = this.props.cards.filter((card) => {\r\n\t\t\treturn cards.indexOf(card.name) >= 0\r\n\t\t})\r\n\r\n\t\tthis.props.setDecklistPoints(results);\r\n\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"DeckEvaluator\">\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tDeck Evaluator\r\n\t\t\t\t</h2>\r\n\r\n\t\t\t\t<textarea value={this.state.decklist} onChange={this.updateDecklist} className=\"DeckEvaluator-text\" placeholder=\"Enter your decklist here to find your points total...\">\r\n\r\n\t\t\t\t</textarea>\r\n\t\t\t\t<div className=\"DeckEvaluator-footer\">\r\n\t\t\t\t\t<button onClick={this.onSubmit}>Submit</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tsetDecklistPoints: (decklist: Array<any>) => dispatch(setDecklistPoints(decklist))\r\n\t}\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DeckEvaluator);","import React from 'react';\r\n\r\nimport PointList from '../data/points.json';\r\nimport './PointsList.css';\r\nimport CardPoints from './components/CardPoints';\r\nimport DeckEvaluator from './components/DeckEvaluator';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\ntype Props = {\r\n\tdecklist: Array<{\r\n\t\tpoints: number\r\n\t}>\r\n}\r\n\r\nclass PointsListPage extends React.Component<Props> {\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.renderTotalPoints = this.renderTotalPoints.bind(this);\r\n\t}\r\n\r\n\trenderTotalPoints() {\r\n\t\tif (this.props.decklist && this.props.decklist.length > 0) {\r\n\r\n\t\t\tconst totalPoints = this.props.decklist.map((card: {\r\n\t\t\t\tpoints: number\r\n\t\t\t}) => {\r\n\t\t\t\treturn card.points\r\n\t\t\t}).reduce((sum: number, points: number) => {\r\n\t\t\t\treturn sum + points;\r\n\t\t\t})\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t{`Total Points: ${totalPoints}`}\r\n\t\t\t\t\t</h4>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"PointsList\">\r\n\r\n\r\n\t\t\t\t<div className=\"PointsList-list\">\r\n\t\t\t\t\t<h2>Point List</h2>\r\n\t\t\t\t\t{this.renderTotalPoints()}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tPointList.cards.map(card => {\r\n\t\t\t\t\t\t\treturn <CardPoints {...card} key={card.name} />\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"content\" className=\"PointsList-content\">\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<h2>Objective of the Points list</h2>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tThe objective of this list is to create a way to evaluate decks power level in regards to EDH.\r\n\t\t\t\t\t\t\tThis project is not meant to replace commander, but rather to aid and <span>inform discussion regarding powerlevels at the table.</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tUsing the Candian Highlander points list as a basis for the points list, and removing cards already Banned in EDH creates the initial points list.\r\n\t\t\t\t\t\t\tAll cards that are banned in EDH have been removed from the points list. This list has been evolved and improved thanks to input from members of the <a href=\"https://discord.gg/49NaUvq\" target=\"_blank\">PlayEDH</a> discord.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<DeckEvaluator {...PointList} />\r\n\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\tChange Log:\r\n\t\t\t\t\t\t</h2>\r\n\r\n\t\t\t\t\t\t<h3>Removed:</h3>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Strip Mine</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Dig through Time</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Treasure Cruise</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Umezawa's Jitte</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Stoneforge Mystic</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t\t<h3>Added:</h3>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Ad Nauseam</span> - 2\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Necropotence</span> - 1\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Tainted Pact</span> - 2\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Food Chain</span> - 1\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Hermit Druid</span> - 1\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Isochron Scepter</span> - 1 - Might be better to add Dramatic Reversal instead, as Isochron has more 'fair' uses.\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Lion's Eye Diamond</span> - 1\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Mystic Remora</span> - 1\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Carpet of Flowers</span> - 1\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Tymna the Weaver</span> - 1\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\tChanged:\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Thrasios, Triton Hero</span> - Down from 3 to 2.\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tdecklist: state.deck.decklist\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(PointsListPage);","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport PointsListPage from './pages/PointsList';\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tLegendary Commander\r\n\t\t\t\t</h1>\r\n\t\t\t\r\n      </header>\r\n\t\t\t<section className=\"App-body\">\r\n\t\t\t\t\t<Route path=\"/\" component={PointsListPage} />\r\n\t\t\t\t\t<Route path=\"/points\" exact component={PointsListPage} />\r\n\r\n\t\t\t</section>\r\n\r\n\t\t</div>\r\n\t\t<footer className=\"App-footer\">\r\n\t\t\tCreated by Aran Mason.\r\n\t\t\t<div>This site uses <a href=\"https://fontawesome.com/license\">Font Awesome Icons</a></div>\r\n\t\t</footer>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { DecklistCards } from '../actions/decklistActions';\r\n\r\nconst defaultState = {\r\n\tdecklist: []\r\n}\r\n\r\nexport default (state = defaultState, action: {\r\n\ttype: string,\r\n\tpayload: any\r\n}) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase DecklistCards:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdecklist: action.payload\r\n\t\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport decklistReducer from './decklistReducer';\r\n\r\nexport default combineReducers({\r\n\tdeck: decklistReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nReactDOM.render(<Provider store={configureStore()}>\n\t<App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from 'redux';\r\n\r\nimport rootReducer from './reducers/rootReducer';\r\nexport default function configureStore() {\r\n return createStore(\r\n  rootReducer\r\n );\r\n}"],"sourceRoot":""}