{"version":3,"sources":["icons/chevron-up-solid.svg","icons/chevron-down-solid.svg","pages/components/CardJustification.tsx","pages/components/CardPoints.tsx","actions/decklistActions.tsx","pages/components/DeckEvaluator.tsx","pages/PointsList.tsx","App.tsx","serviceWorker.ts","reducers/decklistReducer.tsx","reducers/rootReducer.tsx","index.tsx","store.tsx"],"names":["module","exports","CardJustification","className","alt","this","props","name","src","scryfall","image_uris","normal","explanation","moment","changes","last_updated","fromNow","href","scryfall_uri","target","rel","React","Component","CardPoints","state","hasExpanded","toggleExpanded","bind","renderArrow","renderContent","setState","UpArrow","DownArrow","styleColour","style","borderColor","decklist","find","card","backgroundColor","points","onClick","connect","deck","DecklistCards","DeckEvaluator","cards","map","onSubmit","updateDecklist","e","value","preventDefault","regex","entries","split","forEach","entry","result","match","groups","indexOf","push","results","filter","setDecklistPoints","onChange","placeholder","dispatch","payload","console","log","type","PointsListPage","renderTotalPoints","length","totalPoints","reduce","sum","PointList","key","App","path","component","exact","Boolean","window","location","hostname","defaultState","combineReducers","action","ReactDOM","render","store","createStore","rootReducer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"okqGAAAA,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,gD,0YC6D5BC,E,iLA9Bb,OACC,yBAAKC,UAAU,qBACd,yBAAKA,UAAU,oCACd,yBAAKA,UAAU,+BAA+BC,IAAKC,KAAKC,MAAMC,KAAMC,IAAKH,KAAKC,MAAMG,SAASC,WAAWC,UAEzG,yBAAKR,UAAU,6BACd,4BACEE,KAAKC,MAAMC,MAEb,yBAAKJ,UAAU,kCACbE,KAAKC,MAAMM,aAEb,yBAAKT,UAAU,4BACd,yBAAKA,UAAU,mCAAf,iBACgBU,IAAOR,KAAKC,MAAMQ,QAAQC,cAAcC,WAExD,6BACC,uBAAGb,UAAU,kCAAkCc,KAAMZ,KAAKC,MAAMG,SAASS,aAAcC,OAAO,SAASC,IAAI,uBAC1G,sD,GArBwBC,IAAMC,W,QCAhCC,E,YAEL,WAAYjB,GAAwB,IAAD,8BAClC,4CAAMA,KAEDkB,MAAQ,CACZC,aAAa,GAGd,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAEtB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBAVa,E,8EAclCtB,KAAKyB,SAAS,CACbL,aAAcpB,KAAKmB,MAAMC,gB,oCAK1B,OAAGpB,KAAKmB,MAAMC,YACNM,IAEAC,M,oCAIKC,GACb,OAAI5B,KAAKmB,MAAMC,YAKd,yBAAKtB,UAAU,sBAAsB+B,MAAO,CAC3CC,YAAaF,IAEb,kBAAC,EAAsB5B,KAAKC,QAPtB,O,+BAaA,IAAD,OAMD2B,EAJe5B,KAAKC,MAAM8B,SAASC,MAAK,SAAAC,GAC7C,OAAOA,EAAK/B,OAAS,EAAKD,MAAMC,QAGE,UAAY,UAE/C,OACC,yBAAKJ,UAAU,cACd,yBAAKA,UAAU,mBAAmB+B,MAAO,CACxCK,gBAAiBN,IAEjB,yBAAK9B,UAAU,mBACd,gCAASE,KAAKC,MAAMC,OAErB,yBAAKJ,UAAU,qBACd,gCAASE,KAAKC,MAAMkC,SAErB,yBAAKrC,UAAU,qBACd,yBAAKC,IAAI,SAASI,IAAKH,KAAKuB,cAAea,QAASpC,KAAKqB,mBAG1DrB,KAAKwB,cAAcI,Q,GAnECZ,IAAMC,WAgFhBoB,eAPS,SAAClB,GAExB,MAAO,CACNY,SAAUZ,EAAMmB,KAAKP,YAIRM,CAAyBnB,G,QC5G3BqB,G,MAAgB,kB,i2BC0BvBC,E,YAEL,WAAYvC,GAAe,IAAD,8BACzB,4CAAMA,KAEDkB,MAAQ,CACZY,SAAU,GACVU,MAAOxC,EAAMwC,MAAMC,KAAI,SAACT,GACvB,OAAOA,EAAK/B,SAId,EAAKyC,SAAW,EAAKA,SAASrB,KAAd,gBAChB,EAAKsB,eAAiB,EAAKA,eAAetB,KAApB,gBAXG,E,4EAcXuB,GACd7C,KAAKyB,SAAS,CACbM,SAAUc,EAAE/B,OAAOgC,U,+BAIZD,GAAS,IAAD,OAChBA,EAAEE,iBAEF,IAAMC,EAAK,EAAG,mDAAH,UAELC,EAAUjD,KAAKmB,MAAMY,SAASmB,MAAM,MAEtCT,EAAuB,GAE3BQ,EAAQE,SAAQ,SAAAC,GACd,IAAMC,EAASD,EAAME,MAAMN,GACxBK,GAAUA,EAAOE,QAAU,EAAKpC,MAAMsB,MAAMe,QAAQH,EAAOE,OAAOtB,OAAS,GAC7EQ,EAAMgB,KAAKJ,EAAOE,OAAOtB,SAG5B,IAAMyB,EAAU1D,KAAKC,MAAMwC,MAAMkB,QAAO,SAAC1B,GACxC,OAAOQ,EAAMe,QAAQvB,EAAK/B,OAAS,KAGpCF,KAAKC,MAAM2D,kBAAkBF,K,+BAI7B,OACC,yBAAK5D,UAAU,iBACd,8CAIA,8BAAUgD,MAAO9C,KAAKmB,MAAMY,SAAU8B,SAAU7D,KAAK4C,eAAgB9C,UAAU,qBAAqBgE,YAAY,0DAGhH,yBAAKhE,UAAU,wBACd,4BAAQsC,QAASpC,KAAK2C,UAAtB,gB,GAvDuB3B,IAAMC,WAqEnBoB,cAAQ,MANI,SAAC0B,GAC3B,MAAO,CACNH,kBAAmB,SAAC7B,GAAD,OAA0BgC,GDzFbC,ECyFwCjC,EDvFzEkC,QAAQC,IAAI,kBAAmBF,GAExB,CACNG,KAAM5B,EACNyB,aANK,IAA2BA,MC6FnB3B,CAAkCG,GChF3C4B,E,YAEL,WAAYnE,GAAc,IAAD,8BACxB,4CAAMA,KAEDoE,kBAAoB,EAAKA,kBAAkB/C,KAAvB,gBAHD,E,iFAOxB,GAAGtB,KAAKC,MAAM8B,UAAY/B,KAAKC,MAAM8B,SAASuC,OAAS,EAAE,CAExD,IAAMC,EAAcvE,KAAKC,MAAM8B,SAASW,KAAI,SAACT,GAG5C,OAAOA,EAAKE,UACVqC,QAAO,SAACC,EAAatC,GACvB,OAAOsC,EAAMtC,KAGd,OACC,6BACC,oDACmBoC,KAMtB,OAAO,O,+BAIP,OACC,yBAAKzE,UAAU,cAGd,yBAAKA,UAAU,mBACf,0CAEE4E,EAAUjC,MAAMC,KAAI,SAAAT,GACnB,OAAO,kBAAC,EAAD,iBAAgBA,EAAhB,CAAsB0C,IAAK1C,EAAK/B,WAGxCF,KAAKqE,qBAEP,yBAAKvE,UAAU,sBACd,iCACC,4DACA,6HAGA,klBAKD,iCACC,iDACA,+SAkBD,iCACC,kBAAC,EAAkB4E,U,GA7EI1D,IAAMC,WA2FpBoB,eANS,SAAClB,GACxB,MAAO,CACNY,SAAUZ,EAAMmB,KAAKP,YAIRM,CAAyB+B,GC7EzBQ,EAtBO,WACrB,OACC,kBAAC,IAAD,KACA,yBAAK9E,UAAU,OACd,4BAAQA,UAAU,cAAlB,uBAGA,6BAASA,UAAU,YACjB,kBAAC,IAAD,CAAO+E,KAAK,IAAIC,UAAWV,IAC3B,kBAAC,IAAD,CAAOS,KAAK,UAAUE,OAAK,EAACD,UAAWV,MAK1C,4BAAQtE,UAAU,cAAlB,yBAEC,+CAAoB,uBAAGc,KAAK,mCAAR,0BCXHoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7B,MACvB,2D,6kBChBN,IAAM8B,EAAe,CACpBrD,SAAU,ICAIsD,cAAgB,CAC9B/C,KDEc,WAGR,IAHSnB,EAGV,uDAHkBiE,EAAcE,EAGhC,uCAEL,OAAQA,EAAOnB,MACd,KAAK5B,EACJ,OAAO,EAAP,GACIpB,EADJ,CAECY,SAAUuD,EAAOtB,UAEnB,QACC,OAAO7C,METVoE,IAASC,OAAO,kBAAC,IAAD,CAAUC,MCLlBC,YACNC,IDKD,kBAAC,EAAD,OACYC,SAASC,eAAe,SH8H/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c2741dde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chevron-up-solid.3b30c822.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-down-solid.2c0862a6.svg\";","import React from 'react';\r\n\r\nimport './CardJustification.css';\r\nimport moment from 'moment';\r\n\r\ntype CardPointsProps =\r\n\t{\r\n\t\tname: string,\r\n\t\tpoints: number,\r\n\t\texplanation: string,\r\n\t\tscryfall: {\r\n\t\t\timage_uris: {\r\n\t\t\t\t\"small\": string,\r\n\t\t\t\t\"normal\": string,\r\n\t\t\t\t\"large\": string,\r\n\t\t\t\t\"png\": string,\r\n\t\t\t\t\"art_crop\": string,\r\n\t\t\t\t\"border_crop\": string\r\n\t\t\t},\r\n\t\t\tscryfall_uri: string\r\n\t\t},\r\n\t\tchanges: {\r\n\t\t\tdate_created: number,\r\n\t\t\tlast_updated: number\r\n\t\t}\r\n\t}\r\n\r\n\r\nclass CardJustification extends React.Component<CardPointsProps> {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"CardJustification\">\r\n\t\t\t\t<div className=\"CardJustification-card-container\">\r\n\t\t\t\t\t<img className=\"CardJustification-card-image\" alt={this.props.name} src={this.props.scryfall.image_uris.normal}></img>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"CardJustification-content\">\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t{this.props.name}\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div className=\"CardJustification-exaplanation\">\r\n\t\t\t\t\t\t{this.props.explanation}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"CardJustification-footer\">\r\n\t\t\t\t\t\t<div className=\"CardJustification-footer-update\">\r\n\t\t\t\t\t\t\tLast updated: {moment(this.props.changes.last_updated).fromNow()}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div >\r\n\t\t\t\t\t\t\t<a className=\"CardJustification-footer-button\" href={this.props.scryfall.scryfall_uri} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t\t\tView Card\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CardJustification;","import React from 'react';\r\n\r\nimport './CardPoints.css'\r\n\r\nimport UpArrow from '../../icons/chevron-up-solid.svg';\r\nimport DownArrow from '../../icons/chevron-down-solid.svg';\r\n\r\nimport CardJustification from './CardJustification';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\ntype CardPointsProps =\r\n{\r\n\tname: string,\r\n\tpoints: number,\r\n\tscryfall: any,\r\n\texplanation: string,\r\n\tchanges: {\r\n\t\tdate_created: number,\r\n\t\tlast_updated: number\r\n\t},\r\n\tdecklist: Array<any>\r\n}\r\n\r\ntype CardPointsState = {\r\n\thasExpanded: boolean\r\n}\r\n\r\nclass CardPoints extends React.Component<CardPointsProps, CardPointsState> {\r\n\r\n\tconstructor(props: CardPointsProps){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\thasExpanded: false\r\n\t\t}\r\n\r\n\t\tthis.toggleExpanded = this.toggleExpanded.bind(this);\r\n\r\n\t\tthis.renderArrow = this.renderArrow.bind(this);\r\n\t\tthis.renderContent = this.renderContent.bind(this);\r\n\t}\r\n\r\n\ttoggleExpanded(){\r\n\t\tthis.setState({\r\n\t\t\thasExpanded: !this.state.hasExpanded\r\n\t\t})\r\n\t}\r\n\r\n\trenderArrow(){\r\n\t\tif(this.state.hasExpanded){\r\n\t\t\treturn UpArrow\r\n\t\t} else {\r\n\t\t\treturn DownArrow\r\n\t\t}\r\n\t}\r\n\r\n\trenderContent(styleColour: string){\r\n\t\tif(!this.state.hasExpanded){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"CardPoints-expanded\" style={{\r\n\t\t\t\tborderColor: styleColour\r\n\t\t\t}}>\r\n\t\t\t\t<CardJustification {...this.props}/>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst isInDecklist = this.props.decklist.find(card => {\r\n\t\t\treturn card.name === this.props.name\r\n\t\t});\r\n\r\n\t\tconst styleColour = isInDecklist ? \"#C5D86D\" : \"#FAA613\";\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"CardPoints\">\r\n\t\t\t\t<div className=\"CardPoints-title\" style={{\r\n\t\t\t\t\tbackgroundColor: styleColour\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<div className=\"CardPoints-name\">\r\n\t\t\t\t\t\t<strong>{this.props.name}</strong>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"CardPoints-points\">\r\n\t\t\t\t\t\t<strong>{this.props.points}</strong>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"CardPoints-expand\">\r\n\t\t\t\t\t\t<img alt=\"expand\" src={this.renderArrow()} onClick={this.toggleExpanded}></img>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.renderContent(styleColour)}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\r\n\treturn {\r\n\t\tdecklist: state.deck.decklist\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardPoints);","export const DecklistCards = 'DECKLIST_CARDS';\r\n\r\nexport function setDecklistPoints(payload: Array<any>) {\r\n\r\n\tconsole.log(\"Firing Action: \", payload)\r\n\r\n\treturn {\r\n\t\ttype: DecklistCards,\r\n\t\tpayload\r\n\t}\r\n}","import React from 'react';\r\nimport './DeckEvaluator.css'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setDecklistPoints } from '../../actions/decklistActions'\r\n\r\ntype Props = {\r\n\tcards: Array<Card>,\r\n\tsetDecklistPoints: any\r\n};\r\n\r\ntype State = {\r\n\tdecklist: string,\r\n\tcards: Array<string>,\r\n\tresults?: Array<Card>\r\n};\r\n\r\ntype Card = {\r\n\tname: string,\r\n\tpoints: number,\r\n\tscryfall: any,\r\n\texplanation: string,\r\n\tchanges: any\r\n};\r\n\r\nclass DeckEvaluator extends React.Component<Props, State> {\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdecklist: \"\",\r\n\t\t\tcards: props.cards.map((card: Card) => {\r\n\t\t\t\treturn card.name;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\t\tthis.updateDecklist = this.updateDecklist.bind(this);\r\n\t}\r\n\r\n\tupdateDecklist(e: any){\r\n\t\tthis.setState({\r\n\t\t\tdecklist: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tonSubmit(e: any) {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst regex = /^[0-9]+[xX]{0,1}\\s*(?<card>[a-zA-Z',/\\s]+[a-zA-Z])\\s*/i\r\n\r\n\t\tconst entries = this.state.decklist.split('\\n');\r\n\r\n\t\tlet cards: Array<string> = [];\r\n\r\n\t\tentries.forEach(entry => {\r\n\t\t\t\tconst result = entry.match(regex);\r\n\t\t\t\tif(result && result.groups && this.state.cards.indexOf(result.groups.card) >= 0){\r\n\t\t\t\t\tcards.push(result.groups.card);\r\n\t\t\t\t}\r\n\t\t})\r\n\t\tconst results = this.props.cards.filter((card) => {\r\n\t\t\treturn cards.indexOf(card.name) >= 0\r\n\t\t})\r\n\r\n\t\tthis.props.setDecklistPoints(results);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"DeckEvaluator\">\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tDeck Evaluator\r\n\t\t\t\t</h2>\r\n\r\n\t\t\t\t<textarea value={this.state.decklist} onChange={this.updateDecklist} className=\"DeckEvaluator-text\" placeholder=\"Enter your decklist here to find your points total...\">\r\n\r\n\t\t\t\t</textarea>\r\n\t\t\t\t<div className=\"DeckEvaluator-footer\">\r\n\t\t\t\t\t<button onClick={this.onSubmit}>Submit</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tsetDecklistPoints: (decklist: Array<any>) => dispatch(setDecklistPoints(decklist))\r\n\t}\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DeckEvaluator);","import React from 'react';\r\n\r\nimport PointList from '../data/points.json';\r\nimport './PointsList.css';\r\nimport CardPoints from './components/CardPoints';\r\nimport DeckEvaluator from './components/DeckEvaluator';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\ntype Props = {\r\n\tdecklist: Array<{\r\n\t\tpoints: number\r\n\t}>\r\n}\r\n\r\nclass PointsListPage extends React.Component<Props> {\r\n\r\n\tconstructor(props: Props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.renderTotalPoints = this.renderTotalPoints.bind(this);\r\n\t}\r\n\r\n\trenderTotalPoints(){\r\n\t\tif(this.props.decklist && this.props.decklist.length > 0){\r\n\r\n\t\t\tconst totalPoints = this.props.decklist.map((card: {\r\n\t\t\t\tpoints: number\r\n\t\t\t}) => {\r\n\t\t\t\treturn card.points\r\n\t\t\t}).reduce((sum: number, points: number) => {\r\n\t\t\t\treturn sum + points;\r\n\t\t\t})\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t{`Total Points: ${totalPoints}`}\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"PointsList\">\r\n\r\n\r\n\t\t\t\t<div className=\"PointsList-list\">\r\n\t\t\t\t<h2>Point List</h2>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tPointList.cards.map(card => {\r\n\t\t\t\t\t\t\treturn <CardPoints {...card} key={card.name} />\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.renderTotalPoints()}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"PointsList-content\">\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<h2>Objective of the Points list</h2>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tThe objective of this list is to create a way to evaluate decks power level in regards to EDH.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tUsing the CanHigh points list as a basis for the points list, and removing cards already Banned in EDH creates the current point list of ~30 cards. A handful of cards have also been added at a default of 3 or 1 points, to be revised at a later date. I have also removed a selection of cards from the point list that come from the Candian Highlander points list due to a difference in format playability, such as True-name Nemesis, Imezawa's Jitte and Mind Twist. There are also other cards on the current list that could also be revised to be lowered or removed.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<h2>Deck Construction</h2>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tThis point list is meant to be a guide, and suplement the existing EDH banned list to constrict top level power. It is not a definitive approach to how to build a deck. The idea of the list is to create constraints and force new and interesting deck construction choices.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t{/* <p>\r\n\t\t\t\t\t\t\tIf you do wish to construct a deck using this point list it is recommended to use either 10 or 5 points, depending on desired power level.\r\n\t\t\t\t\t\t</p> */}\r\n\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t{/* <section>\r\n\t\t\t\t\t\t<h2>Future Evolution</h2>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tOne consideration for the future of this list is with enough community support is releasing cards from the banned list, and giving them appropriate pointed values to allow people with them however constrain thier impact on the wider format.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\tAnother fear is this solution validating options in a non-social way by creating a codified justification for deck power levels. This will have to be accounted for and account points for social and not power-level reasons.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</section> */}\r\n\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<DeckEvaluator {...PointList}/>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state:any) => {\r\n\treturn {\r\n\t\tdecklist: state.deck.decklist\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(PointsListPage);","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport PointsListPage from './pages/PointsList';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<Router>\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\tLegendary Commander\n      </header>\n\t\t\t<section className=\"App-body\">\n\t\t\t\t\t<Route path=\"/\" component={PointsListPage} />\n\t\t\t\t\t<Route path=\"/points\" exact component={PointsListPage} />\n\n\t\t\t</section>\n\n\t\t</div>\n\t\t<footer className=\"App-footer\">\n\t\t\tCreated by Aran Mason.\n\t\t\t<div>This site uses <a href=\"https://fontawesome.com/license\">Font Awesome Icons</a></div>\n\t\t</footer>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { DecklistCards } from '../actions/decklistActions';\r\n\r\nconst defaultState = {\r\n\tdecklist: []\r\n}\r\n\r\nexport default (state = defaultState, action: {\r\n\ttype: string,\r\n\tpayload: any\r\n}) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase DecklistCards:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdecklist: action.payload\r\n\t\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport decklistReducer from './decklistReducer';\r\n\r\nexport default combineReducers({\r\n\tdeck: decklistReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nReactDOM.render(<Provider store={configureStore()}>\n\t<App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from 'redux';\r\n\r\nimport rootReducer from './reducers/rootReducer';\r\nexport default function configureStore() {\r\n return createStore(\r\n  rootReducer\r\n );\r\n}"],"sourceRoot":""}